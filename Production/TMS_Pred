{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPUrI9QMmyZuaKmKhdGvVJK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"6Iel--5e3fXt"},"outputs":[],"source":["import json\n","import joblib\n","from azureml.core.model import Model\n","import pandas as pd\n","import category_encoders as ce\n","from tensorflow import keras\n","from sklearn.preprocessing import MinMaxScaler"]},{"cell_type":"code","source":["def init():\n","    global encoder, predictor\n","    model1_path = Model.get_model_path('Store_Sales_Pred_Encoder',)\n","    model2_path = Model.get_model_path('Store_Sales_Pred_Model')\n","    encoder = joblib.load(model1_path)\n","    predictor = keras.models.load_model(model2_path)\n"],"metadata":{"id":"FFvt6Ukt3rbv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def run(raw_data):\n","    data = json.loads(raw_data)['data']\n","    data = pd.DataFrame.from_dict(data)\n","    data_encoded = encoder.transform(data)\n","    mx = MinMaxScaler()\n","    data_encoded = mx.fit_transform(data_encoded)\n","    # data_encoded = data_encoded.to_numpy()\n","    data_encoded = data_encoded.reshape(1,len(data_encoded),32)\n","    preds = predictor.predict(data_encoded)\n","    return json.dumps(preds.tolist())\n"],"metadata":{"id":"8VJsy3z14gV1"},"execution_count":null,"outputs":[]}]}